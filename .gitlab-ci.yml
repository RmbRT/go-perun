.only-default: &only-default
  only:
    - tags
    - pushes
    - merge_requests

stages:
  - vetting
  - tests

code_quality:
  <<: *only-default
  stage: vetting
  image: perunnetwork/golangci-lint-jq:v1.27
  script:
    - golangci-lint run --config .golangci.yml --out-format code-climate | tee gl-code-quality-report.json | jq -r '.[] | "\(.location.path):\(.location.lines.begin) \(.description)"'
  artifacts:
    paths: [gl-code-quality-report.json]
  allow_failure: true

copyright_notice:
  <<: *only-default
  stage: vetting
  script: ".scripts/check-copyright-notice.sh"

vanity_import:
  <<: *only-default
  stage: vetting
  script: ".scripts/check-vanity-imports.sh $PWD"

unit_tests:
  image: golang
  stage: tests
  script: "go test -timeout 60s -cover ./..."
  only:
    - merge_requests

unit_race_tests:
  image: golang
  stage: tests
  script: "go test -timeout 120s -race -gcflags=all=-d=checkptr=0 ./..."
  only:
    - merge_requests
  when: on_success

